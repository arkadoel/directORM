#region "GESTOR DE LA BASE DE DATOS"
    public class GestorDB
    {
        /***
         * Se hace mediante LINQ to Dataset debido a que se quiere hacer lo
         * mas portable posible. No todos los equipos disponen de SQL Server
         * instalado, pero las librerias para el acceso a access vienen por 
         * defecto con el .NET framework. 
         */
        //public static String CADENA_CONEXION = @"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=|DataDirectory|\DB2015.mdb;User Id=admin;Password=;";
		public static String CADENA_CONEXION = @"Provider=SQLNCLI11; Server=.\SQLEXPRESS;Initial Database=DB2015; Trusted_Connection=yes; ";
        private static SqlConnection _conexion = null;

        /// <summary>
        /// Conexion automatica con la base de datos
        /// </summary>
        public static SqlConnection Conexion 
        {
            get 
            {
                if (_conexion == null)
                {
                    _conexion = new SqlConnection(CADENA_CONEXION);
                }

                if (_conexion.State != ConnectionState.Open)
                {
                    _conexion.Open();
                }
                return _conexion;
            }
            set
            {
                _conexion = value;
            }
        }
        
        /// <summary>
        /// Finalizar la conexion existente si se puede
        /// </summary>
        /// <returns>Devuelve un string con 'OK' o con la descripcion
        /// del error resultante
        /// </returns>
        public static String FinConexion()
        {
            try
            {
                if (Conexion != null)
                {
                    if (Conexion.State == ConnectionState.Open)
                    {
                        Conexion.Close();
                    }
                }
            }
            catch (Exception ex)
            {
                return ex.Message.ToString();
            }
            return "OK";
        }

        /// <summary>
        /// Permite ejecutar sentencias SQL SELECT contra la base de datos,
        /// devuelve un dataset con los datos seleccionados.
        /// </summary>
        /// <param name="_sql">Sentencia select</param>
        /// <param name="_nombreTabla">Nombre de la tabla resultado</param>
        /// <returns></returns>
        public static DataTable Consulta(String _sql)
        {
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter(_sql, GestorDB.Conexion);
            da.Fill(ds, "t");
            GestorDB.FinConexion();
            return ds.Tables["t"];
        }

        /// <summary>
        /// Ejecuta sentencias insert, delete o update. Retorna el numero
        /// de filas afectadas o -1 si no se modifico nada.
        /// </summary>
        /// <param name="_sql"></param>
        /// <returns></returns>
        public static int Ejecuta(String _sql)
        {
            int resultado = -1;
            SqlCommand comando = new SqlCommand(_sql, GestorDB.Conexion);

            resultado = comando.ExecuteNonQuery();
            Console.WriteLine("filas afectadas : " + resultado.ToString());
            GestorDB.FinConexion();
            return resultado;
        }


    }

	#endregion
